"0","```r
# Create empty tibble to store results
# I 
df_bar <- tibble(state_or_dist = rep(c(\"State\",\"District\"),each =6), 
                 changes_or_levels =rep(rep(c(\"Changes\",\"Levels\"), each =3), times= 2),
                 bar_part = factor(rep(c(\"Persistent\",\"Transitory sampling\", \"Transitory other\"),4), levels = c(\"Transitory other\",\"Transitory sampling\", \"Persistent\")),
                 value = rep(.001,12)
                 )
# Update the values for the district changes bar
df_bar$value[(df_bar$state_or_dist == \"District\") & (df_bar$changes_or_levels == \"Changes\") & (df_bar$bar_part == \"Persistent\")] <- var_dist_deltas - 2*var_dist_epsilon

df_bar$value[(df_bar$state_or_dist == \"District\") & (df_bar$changes_or_levels == \"Changes\") & (df_bar$bar_part == \"Transitory sampling\")] <- 2*var_dist_sampling

df_bar$value[(df_bar$state_or_dist == \"District\") & (df_bar$changes_or_levels == \"Changes\") & (df_bar$bar_part == \"Transitory other\")] <- 2*var_dist_epsilon - 2*var_dist_sampling


# Update the values for the district levels bar
df_bar$value[(df_bar$state_or_dist == \"District\") & (df_bar$changes_or_levels == \"Levels\") & (df_bar$bar_part == \"Persistent\")] <- var_dist_levels - var_dist_epsilon

df_bar$value[(df_bar$state_or_dist == \"District\") & (df_bar$changes_or_levels == \"Levels\") & (df_bar$bar_part == \"Transitory sampling\")] <- var_dist_sampling

df_bar$value[(df_bar$state_or_dist == \"District\") & (df_bar$changes_or_levels == \"Levels\") & (df_bar$bar_part == \"Transitory other\")] <- var_dist_epsilon - var_dist_sampling

##### STATE DATA #####

# CHANGES
df_bar$value[(df_bar$state_or_dist == \"State\") & (df_bar$changes_or_levels == \"Changes\") & (df_bar$bar_part == \"Persistent\")] <- var_state_deltas-2*(var_state_sampling+var_state_levels_other2)

df_bar$value[(df_bar$state_or_dist == \"State\") & (df_bar$changes_or_levels == \"Changes\") & (df_bar$bar_part == \"Transitory sampling\")] <- 2*var_state_sampling

df_bar$value[(df_bar$state_or_dist == \"State\") & (df_bar$changes_or_levels == \"Changes\") & (df_bar$bar_part == \"Transitory other\")] <- 2*var_state_levels_other2


# LEVELS
df_bar$value[(df_bar$state_or_dist == \"State\") & (df_bar$changes_or_levels == \"Levels\") & (df_bar$bar_part == \"Persistent\")] <- var_state_levels_persistent2

df_bar$value[(df_bar$state_or_dist == \"State\") & (df_bar$changes_or_levels == \"Levels\") & (df_bar$bar_part == \"Transitory sampling\")] <- var_state_sampling

df_bar$value[(df_bar$state_or_dist == \"State\") & (df_bar$changes_or_levels == \"Levels\") & (df_bar$bar_part == \"Transitory other\")] <- var_state_levels_other2


# I have created this graph so that you can see it in the notebook
# The final version which combines both subjects, is created in a separate notebook
ggplot(df_bar, aes(fill = bar_part, y=value, x= changes_or_levels)) +
  geom_bar(position=\"stack\", stat =\"identity\") +
  facet_grid(~ state_or_dist) + 
  scale_fill_manual(values = c(\"red\", \"orange\", \"blue\"))+
  labs(fill = \"Variance component\", x = \"\")

ggsave(paste(subject,\" - variance_decomposition.png\"), width = 5, height = 6 , path = output)
```"

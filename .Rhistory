blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
ggplot2::ggplot(diamonds, aes(carat, price)) + geom_point()
ggplot2::ggplot(ggplot2::diamonds, aes(carat, price)) + geom_point()
library(tidyverse)
ggplot(diamonds, aes(carat, price)) + geom_point()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
?rbeta
?beta
?rbeta
.2/1000
(.2/1000)^.5
?quantile
# Evaluation data
na <- 190
nb <- 10
nc <- 90
nd <- 10
# Output from step 2 - analysis of survey data assuming test is 100% accurate
ppos_hat <- .2
ppos_se <- .01
# Number of simulations
num_sims <- 10000
# Simulate draws from each posterior
sens_sims <- rbeta(num_sims, na, nb)
spec_sims <- rbeta(num_sims, nc, nd)
ppos_sims <- rnorm(num_sims, mean=ppos_hat, sd = ppos_se)
# Combine them using formula above
theta <- (ppos_sim+spec_sims-1)/(sens_sims+spec_sims-1)
# Evaluation data
na <- 190
nb <- 10
nc <- 90
nd <- 10
# Output from step 2 - analysis of survey data assuming test is 100% accurate
ppos_hat <- .2
ppos_se <- .01
# Number of simulations
num_sims <- 10000
# Simulate draws from each posterior
sens_sims <- rbeta(num_sims, na, nb)
spec_sims <- rbeta(num_sims, nc, nd)
ppos_sims <- rnorm(num_sims, mean=ppos_hat, sd = ppos_se)
# Combine them using formula above
theta <- (ppos_sims+spec_sims-1)/(sens_sims+spec_sims-1)
# Generate 95% confidence intervals by getting the quantiles
ci <- quantile(theta, c(.05,.95))
ci
blogdown:::serve_site()
?augment
broom::augment()
?broom::augment
?predict
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()

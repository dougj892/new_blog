filter(year != 2018)
ggplot(subset(aser, state_abbr == "MH"), aes(x = year, y = std5_read)) +
geom_line() +
labs(title = "Maharashtra Grade 5 Reading", y = "% rural grade 5 children can read grade 2 text")
# Create dataset of first differences
diffs <- aser %>% filter(year >= 2012) %>% group_by(State) %>%
mutate_at(vars(starts_with("std")), ~.x-lag(.x, order_by = year)) %>%
filter(year != 2012) %>%
ungroup()
diffs_long <- diffs %>% pivot_longer(starts_with("std"), names_to = "temp", values_to = "diff") %>%
mutate(class = str_sub(temp, 4,4), subject = str_extract(temp, "(math|read)"))
# plot the reading changes for 2016
ggplot(subset(diffs_long, year == 2016), aes(x = State, y = diff, fill=factor(ifelse(State=="maharashtra","Highlighted","Normal")))) +
scale_fill_manual(name = "area", values=c("red","grey50"), guide= FALSE) +
geom_bar(stat = "identity")+
facet_grid(subject ~ class) +
coord_flip() +
labs(y = "Change from 2014 to 2016", x =element_blank(), title = "Change in ASER score 2014-2016 by state, subject and grade")
# list the states with any NAs for std3_read or std5_read
states_w_na <- unique(aser$state_abbr[is.na(aser$std3_read) | is.na(aser$std5_read)])
# drop these states from the dataset (they are all small and unlikely to be good matches anyway). I also drop 2006 data because for some reason that is giving me the unbalanced error
aser <- aser %>% filter(!(state_abbr %in% states_w_na)) %>%
filter(year != 2006)
# Create index for state
aser <- aser %>% group_by(state_abbr) %>% mutate(id = group_indices())
dataprep.out <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2014,
special.predictors = list(
list("std5_read", 2013:2014, "mean"),
list("std3_read", 2014, "mean"),
list("std5_math", 2016, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = 13,
controls.identifier = seq(1,max(aser$id),1)[-13],
time.optimize.ssr = 2007:2014,
time.plot = 2007:2016)
synth.out
placebo_effects <- function(i) {
dataprep.temp <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2014,
special.predictors = list(
list("std5_read", 2013:2014, "mean"),
list("std3_read", 2014, "mean"),
list("std5_math", 2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = i,
controls.identifier = seq(1,max(aser$id),1)[-i],
time.optimize.ssr = 2007:2014,
time.plot = 2007:2015)
synth.out <- synth(data.prep.obj = dataprep.out, custom.v = v)
gaps <- dataprep.temp$Y1plot - (dataprep.temp$Y0plot %*% synth.out$solution.w)
return(list(gaps[length(gaps)], synth.out$loss.w))
}
effects <- map(1:max(aser$id), placebo_effects)
# Change 2016 to 2015. Otherwise, the lack of 2015 throws an error.
aser$year[aser$year ==2016] <- 2015
# list the states with any NAs for std3_read or std5_read and then drop them.
#  I also drop 2006 data because for some reason that is giving me the unbalanced error
states_w_na <- unique(aser$state_abbr[is.na(aser$std3_read) | is.na(aser$std5_read)])
aser <- aser %>% filter(!(state_abbr %in% states_w_na)) %>%
filter(year != 2006)
# Create index for state (this is required by the Synth package)
aser <- aser %>% group_by(state_abbr) %>% mutate(id = group_indices())
placebo_effects <- function(i) {
dataprep.temp <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2014,
special.predictors = list(
list("std5_read", 2013:2014, "mean"),
list("std3_read", 2014, "mean"),
list("std5_math", 2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = i,
controls.identifier = seq(1,max(aser$id),1)[-i],
time.optimize.ssr = 2007:2014,
time.plot = 2007:2015)
synth.out <- synth(data.prep.obj = dataprep.out, custom.v = v)
gaps <- dataprep.temp$Y1plot - (dataprep.temp$Y0plot %*% synth.out$solution.w)
return(list(gaps[length(gaps)], synth.out$loss.w))
}
effects <- map(1:max(aser$id), placebo_effects)
View(effects)
temp <- do.call("rbind", effects)
View(temp)
for (q in effects) {
cat(q[1])
cat(q[2])
}
for (q in effects) {
cat(q[[1]])
cat(q[[2]])
}
placebo_effects <- function(i) {
dataprep.temp <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2014,
special.predictors = list(
list("std5_read", 2013:2014, "mean"),
list("std3_read", 2014, "mean"),
list("std5_math", 2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = i,
controls.identifier = seq(1,max(aser$id),1)[-i],
time.optimize.ssr = 2007:2014,
time.plot = 2007:2015)
synth.out <- synth(data.prep.obj = dataprep.temp, custom.v = v)
gaps <- dataprep.temp$Y1plot - (dataprep.temp$Y0plot %*% synth.out$solution.w)
return(list(gaps[length(gaps)], synth.out$loss.w))
}
effects <- map(1:max(aser$id), placebo_effects)
for (q in effects) {
cat(q[[1]])
cat(q[[2]])
}
temp2 <- as.tibble(effects)
# Estimate SCM just for MH
dataprep.mh <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2014,
special.predictors = list(
list("std5_read", 2013:2014, "mean"),
list("std3_read", 2014, "mean"),
list("std5_math", 2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = 13,
controls.identifier = seq(1,max(aser$id),1)[-13],
time.optimize.ssr = 2007:2014,
time.plot = 2007:2015)
mh <- synth(data.prep.obj = dataprep.mh, custom.v = v)
# Estimate placebo effect for each state. Technically, i shoudl drop MH first but it doesn't make much of a differene
placebo_effects <- function(i) {
dataprep.temp <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2014,
special.predictors = list(
list("std5_read", 2013:2014, "mean"),
list("std3_read", 2014, "mean"),
list("std5_math", 2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = i,
controls.identifier = seq(1,max(aser$id),1)[-i],
time.optimize.ssr = 2007:2014,
time.plot = 2007:2015)
synth.out <- synth(data.prep.obj = dataprep.temp, custom.v = v)
gaps <- dataprep.temp$Y1plot - (dataprep.temp$Y0plot %*% synth.out$solution.w)
return(gaps[length(gaps)])
}
effects <- map_dbl(1:max(aser$id), placebo_effects)
effects
str(mh)
str(dataprep.mh)
dataprep.mh$names.and.numbers
aser %>% count(id, state_abbr)
aser %>% count(id, state_abbr) %>% print(100)
aser %>% count(id, state_abbr) %>% print(n=100)
# Estimate SCM just for MH
dataprep.mh <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2014,
special.predictors = list(
list("std5_read", 2013:2014, "mean"),
list("std3_read", 2014, "mean"),
list("std5_math", 2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = 11,
controls.identifier = seq(1,max(aser$id),1)[-11],
time.optimize.ssr = 2007:2014,
time.plot = 2007:2015)
mh <- synth(data.prep.obj = dataprep.mh, custom.v = v)
# Estimate placebo effect for each state. Technically, i shoudl drop MH first but it doesn't make much of a difference
placebo_effects <- function(i) {
dataprep.temp <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2014,
special.predictors = list(
list("std5_read", 2013:2014, "mean"),
list("std3_read", 2014, "mean"),
list("std5_math", 2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = i,
controls.identifier = seq(1,max(aser$id),1)[-i],
time.optimize.ssr = 2007:2014,
time.plot = 2007:2015)
synth.out <- synth(data.prep.obj = dataprep.temp, custom.v = v)
gaps <- dataprep.temp$Y1plot - (dataprep.temp$Y0plot %*% synth.out$solution.w)
return(gaps[length(gaps)])
}
effects <- map_dbl(1:max(aser$id), placebo_effects)
effects[0]
effects[1]
effects[11]
?cbind
results <- aser %>% count(state_abbr, id) %>% arrange(id)
View(results)
results <- aser %>% count(state_abbr, id) %>% arrange(id) %>% cbind(effects)
View(results)
results <- aser %>% count(state_abbr, id) %>%
arrange(id) %>% select(-n) %>%
cbind(effects) %>% rename(3, "effect")
results <- aser %>% count(state_abbr, id) %>%
arrange(id) %>% select(-n) %>%
cbind(effects) %>% rename(...4 = "effect")
?rename
View(results)
results <- aser %>% count(state_abbr, id) %>%
arrange(id) %>% select(-n) %>%
cbind(effects) %>% rename("effect" =...4 )
results <- aser %>% count(state_abbr, id) %>%
arrange(id) %>% select(-n) %>%
cbind(effects) %>% rename("effect" =...3 )
View(results)
mh.tables <- synth.tab(mh)
?synth.tab
mh.tables <- synth.tab(mh, dataprep.mh)
mh.tables
mh <- synth(data.prep.obj = dataprep.mh, custom.v = v)
# Estimate SCM just for MH
dataprep.mh <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2013,
special.predictors = list(
list("std5_read", 2012:2013, "mean"),
list("std3_read", 2013, "mean"),
list("std5_math", 2014:2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = 11,
controls.identifier = seq(1,max(aser$id),1)[-11],
time.optimize.ssr = 2007:2013,
time.plot = 2007:2015)
mh <- synth(data.prep.obj = dataprep.mh, custom.v = v)
mh.tables <- synth.tab(mh, dataprep.mh)
# Estimate placebo effect for each state. Technically, i should drop MH first but it doesn't make much of a difference
placebo_effects <- function(i) {
dataprep.temp <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2014,
special.predictors = list(
list("std5_read", 2013:2014, "mean"),
list("std3_read", 2014, "mean"),
list("std5_math", 2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = i,
controls.identifier = seq(1,max(aser$id),1)[-i],
time.optimize.ssr = 2007:2014,
time.plot = 2007:2015)
synth.out <- synth(data.prep.obj = dataprep.temp, custom.v = v)
gaps <- dataprep.temp$Y1plot - (dataprep.temp$Y0plot %*% synth.out$solution.w)
return(gaps[length(gaps)])
}
effects <- map_dbl(1:max(aser$id), placebo_effects)
gaps <- dataprep.mh$Y1plot - (dataprep.mh$Y0plot %*% mh$solution.w)
gaps
View(diffs_long)
# Create dataset of first differences
diffs <- aser %>% filter((year == 2013) | (year == 2016)) %>% group_by(State) %>%
mutate_at(vars(starts_with("std")), ~.x-lag(.x, order_by = year)) %>%
filter(year != 2012) %>%
ungroup()
diffs_long <- diffs %>% pivot_longer(starts_with("std"), names_to = "temp", values_to = "diff") %>%
mutate(class = str_sub(temp, 4,4), subject = str_extract(temp, "(math|read)"))
# plot the reading changes for 2016
ggplot(subset(diffs_long, year == 2016), aes(x = State, y = diff, fill=factor(ifelse(State=="maharashtra","Highlighted","Normal")))) +
scale_fill_manual(name = "area", values=c("red","grey50"), guide= FALSE) +
geom_bar(stat = "identity")+
facet_grid(subject ~ class) +
coord_flip() +
labs(y = "Change from 2014 to 2016", x =element_blank(), title = "Change in ASER score 2014-2016 by state, subject and grade")
View(diffs_long)
# Generate dateset of deltas from 2013 to 2016
diffs <- aser %>% filter((year == 2013) | (year == 2016)) %>% group_by(State) %>%
mutate_at(vars(starts_with("std")), ~.x-lag(.x, order_by = year)) %>%
filter(year == 2016) %>%
ungroup()
diffs_long <- diffs %>% pivot_longer(starts_with("std"), names_to = "temp", values_to = "diff") %>%
mutate(class = str_sub(temp, 4,4), subject = str_extract(temp, "(math|read)"))
View(diffs_long)
# Generate dateset of deltas from 2013 to 2016
diffs <- aser %>% filter((year == 2013) | (year == 2016)) %>% group_by(State) %>%
mutate_at(vars(starts_with("std")), ~.x-lag(.x, order_by = year)) %>%
filter(year == 2016) %>%
ungroup()
diffs <- aser %>% filter((year == 2013) | (year == 2016)) %>% group_by(State) %>%
mutate_at(vars(starts_with("std")), ~.x-lag(.x, order_by = year))
View(diffs)
diffs <- aser %>% filter((year == 2013) | (year == 2016)) %>% group_by(State) %>%
mutate_at(vars(starts_with("std")), ~.x-lag(.x, order_by = year))
View(diffs)
View(diffs)
View(aser)
diffs <- aser %>% filter((year == 2013) | (year == 2016))
View(diffs)
library(tidyverse); library(Synth)
aser <- read_csv("https://raw.githubusercontent.com/dougj892/public-datasets/master/ASER%20trends%20over%20time.csv") %>%
mutate_at(vars(-state_abbr, -State), as.numeric) %>%
select(year, State, state_abbr, std3_read = std3_read_std1_all, std5_read = std5_read_std2_all, std3_math  = std3_subtract_all, std5_math = std5_divis_all) %>%
filter(year != 2018)
# Generate dateset of deltas from 2013 to 2016
diffs <- aser %>% filter((year == 2013) | (year == 2016)) %>% group_by(State) %>%
mutate_at(vars(starts_with("std")), ~.x-lag(.x, order_by = year)) %>%
filter(year == 2016) %>%
ungroup()
diffs_long <- diffs %>% pivot_longer(starts_with("std"), names_to = "temp", values_to = "diff") %>%
mutate(class = str_sub(temp, 4,4), subject = str_extract(temp, "(math|read)"))
# plot the reading changes for 2016
ggplot(diffs_long, aes(x = State, y = diff, fill=factor(ifelse(State=="maharashtra","Highlighted","Normal")))) +
scale_fill_manual(name = "area", values=c("red","grey50"), guide= FALSE) +
geom_bar(stat = "identity")+
facet_grid(subject ~ class) +
coord_flip() +
labs(y = "Change from 2014 to 2016", x =element_blank(), title = "Change in ASER score 2014-2016 by state, subject and grade")
library(tidyverse); library(haven)
df <- read_dta("C:/Users/dougj/Documents/Data/Education/ASER microdata/ASER2007.dta")
library(tidyverse); library(Synth)
aser <- read_csv("https://raw.githubusercontent.com/dougj892/public-datasets/master/ASER%20trends%20over%20time.csv") %>%
mutate_at(vars(-state_abbr, -State), as.numeric) %>%
select(year, State, state_abbr, std3_read = std3_read_std1_all, std5_read = std5_read_std2_all, std3_math  = std3_subtract_all, std5_math = std5_divis_all) %>%
filter(year != 2018)
ggplot(subset(aser, state_abbr == "MH"), aes(x = year, y = std5_read)) +
geom_line() +
labs(title = "Maharashtra Grade 5 Reading", y = "% rural grade 5 children can read grade 2 text")
# Generate dateset of deltas from 2013 to 2016
diffs <- aser %>% filter((year == 2013) | (year == 2016)) %>% group_by(State) %>%
mutate_at(vars(starts_with("std")), ~.x-lag(.x, order_by = year)) %>%
filter(year == 2016) %>%
ungroup()
diffs_long <- diffs %>% pivot_longer(starts_with("std"), names_to = "temp", values_to = "diff") %>%
mutate(class = str_sub(temp, 4,4), subject = str_extract(temp, "(math|read)"))
# plot the reading changes for 2016
ggplot(diffs_long, aes(x = State, y = diff, fill=factor(ifelse(State=="maharashtra","Highlighted","Normal")))) +
scale_fill_manual(name = "area", values=c("red","grey50"), guide= FALSE) +
geom_bar(stat = "identity")+
facet_grid(subject ~ class) +
coord_flip() +
labs(y = "Change from 2014 to 2016", x =element_blank(), title = "Change in ASER score 2014-2016 by state, subject and grade")
# Change 2016 to 2015. Otherwise, the lack of 2015 throws an error.
aser$year[aser$year ==2016] <- 2015
# list the states with any NAs for std3_read or std5_read and then drop them.
#  I also drop 2006 data because for some reason that is giving me the unbalanced error
states_w_na <- unique(aser$state_abbr[is.na(aser$std3_read) | is.na(aser$std5_read)])
aser <- aser %>% filter(!(state_abbr %in% states_w_na)) %>%
filter(year != 2006)
# Create index for state (this is required by the Synth package)
aser <- aser %>% group_by(state_abbr) %>% mutate(id = group_indices())
# Estimate SCM just for MH
dataprep.mh <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2013,
special.predictors = list(
list("std5_read", 2012:2013, "mean"),
list("std3_read", 2013, "mean"),
list("std5_math", 2014:2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = 11,
controls.identifier = seq(1,max(aser$id),1)[-11],
time.optimize.ssr = 2007:2013,
time.plot = 2007:2015)
mh <- synth(data.prep.obj = dataprep.mh, custom.v = v)
library(tidyverse); library(Synth)
aser <- read_csv("https://raw.githubusercontent.com/dougj892/public-datasets/master/ASER%20trends%20over%20time.csv") %>%
mutate_at(vars(-state_abbr, -State), as.numeric) %>%
select(year, State, state_abbr, std3_read = std3_read_std1_all, std5_read = std5_read_std2_all, std3_math  = std3_subtract_all, std5_math = std5_divis_all) %>%
filter(year != 2018)
ggplot(subset(aser, state_abbr == "MH"), aes(x = year, y = std5_read)) +
geom_line() +
labs(title = "Maharashtra Grade 5 Reading", y = "% rural grade 5 children can read grade 2 text")
# Generate dateset of deltas from 2013 to 2016
diffs <- aser %>% filter((year == 2013) | (year == 2016)) %>% group_by(State) %>%
mutate_at(vars(starts_with("std")), ~.x-lag(.x, order_by = year)) %>%
filter(year == 2016) %>%
ungroup()
diffs_long <- diffs %>% pivot_longer(starts_with("std"), names_to = "temp", values_to = "diff") %>%
mutate(class = str_sub(temp, 4,4), subject = str_extract(temp, "(math|read)"))
# plot the reading changes for 2016
ggplot(diffs_long, aes(x = State, y = diff, fill=factor(ifelse(State=="maharashtra","Highlighted","Normal")))) +
scale_fill_manual(name = "area", values=c("red","grey50"), guide= FALSE) +
geom_bar(stat = "identity")+
facet_grid(subject ~ class) +
coord_flip() +
labs(y = "Change from 2014 to 2016", x =element_blank(), title = "Change in ASER score 2014-2016 by state, subject and grade")
# Change 2016 to 2015. Otherwise, the lack of 2015 throws an error.
aser$year[aser$year ==2016] <- 2015
# list the states with any NAs for std3_read or std5_read and then drop them.
#  I also drop 2006 data because for some reason that is giving me the unbalanced error
states_w_na <- unique(aser$state_abbr[is.na(aser$std3_read) | is.na(aser$std5_read)])
aser <- aser %>% filter(!(state_abbr %in% states_w_na)) %>%
filter(year != 2006)
# Create index for state (this is required by the Synth package)
aser <- aser %>% group_by(state_abbr) %>% mutate(id = group_indices())
# Estimate SCM just for MH
v <- c(.15,.2,.2,.2,.25)
dataprep.mh <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2013,
special.predictors = list(
list("std5_read", 2012:2013, "mean"),
list("std3_read", 2013, "mean"),
list("std5_math", 2014:2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = 11,
controls.identifier = seq(1,max(aser$id),1)[-11],
time.optimize.ssr = 2007:2013,
time.plot = 2007:2015)
mh <- synth(data.prep.obj = dataprep.mh, custom.v = v)
mh.tables <- synth.tab(mh, dataprep.mh)
# Estimate placebo effect for each state. Technically, i should drop MH first but it doesn't make much of a difference
placebo_effects <- function(i) {
dataprep.temp <- dataprep(foo = as.data.frame(aser),
predictors = c("std3_read", "std5_read"),
predictors.op = "mean",
time.predictors.prior = 2007:2013,
special.predictors = list(
list("std5_read", 2012:2013, "mean"),
list("std3_read", 2013, "mean"),
list("std5_math", 2014:2015, "mean")
),
dependent = "std5_read",
unit.variable = "id",
unit.names.variable = "state_abbr",
time.variable = "year",
treatment.identifier = 11,
controls.identifier = seq(1,max(aser$id),1)[-11],
time.optimize.ssr = 2007:2013,
time.plot = 2007:2015)
synth.out <- synth(data.prep.obj = dataprep.temp, custom.v = v)
gaps <- dataprep.temp$Y1plot - (dataprep.temp$Y0plot %*% synth.out$solution.w)
return(gaps[length(gaps)])
}
effects <- map_dbl(1:max(aser$id), placebo_effects)
results <- aser %>% count(state_abbr, id) %>%
arrange(id) %>% select(-n) %>%
cbind(effects) %>% rename("effect" =...3 )
library(tidyverse); library(Synth)
aser <- read_csv("https://raw.githubusercontent.com/dougj892/public-datasets/master/ASER%20trends%20over%20time.csv") %>%
mutate_at(vars(-state_abbr, -State), as.numeric) %>%
select(year, State, state_abbr, std3_read = std3_read_std1_all, std5_read = std5_read_std2_all, std3_math  = std3_subtract_all, std5_math = std5_divis_all) %>%
filter(year != 2018)
# Generate dateset of deltas from 2013 to 2016
diffs <- aser %>% filter((year == 2013) | (year == 2016)) %>% group_by(State) %>%
mutate_at(vars(starts_with("std")), ~.x-lag(.x, order_by = year)) %>%
filter(year == 2016) %>%
ungroup()
diffs_long <- diffs %>% pivot_longer(starts_with("std"), names_to = "temp", values_to = "diff") %>%
mutate(class = str_sub(temp, 4,4), subject = str_extract(temp, "(math|read)"))
# plot the reading changes for 2016
ggplot(diffs_long, aes(x = State, y = diff, fill=factor(ifelse(State=="maharashtra","Highlighted","Normal")))) +
scale_fill_manual(name = "area", values=c("red","grey50"), guide= FALSE) +
geom_bar(stat = "identity")+
facet_grid(subject ~ class) +
coord_flip() +
labs(y = "Change from 2014 to 2016", x =element_blank(), title = "Change in ASER score 2014-2016 by state, subject and grade")
